

import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Scanner;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Diego
 */
public class MenuUsuario extends javax.swing.JFrame {

    /**
     * Creates new form MenuUsuario
     */
    public MenuUsuario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnMostrarCampos = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        txtRol = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtContra = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txtPath = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        btnBaja = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Mantenimiento de usuario");

        jLabel2.setText("Usuario");

        btnMostrarCampos.setText("Modificar");
        btnMostrarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarCamposActionPerformed(evt);
            }
        });

        jLabel3.setText("Rol:");

        txtUsuario.setEnabled(false);

        txtRol.setEnabled(false);

        jLabel4.setText("Haga click para modificar información");

        jLabel5.setText("Contraseña:");

        txtContra.setEnabled(false);

        jLabel7.setText("Correo:");

        txtCorreo.setEnabled(false);

        jLabel8.setText("Fecha Nacimiento");

        txtFecha.setEnabled(false);

        jLabel9.setText("Telefono:");

        txtTelefono.setEnabled(false);

        jButton1.setText("Fotografia");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtPath.setEnabled(false);

        btnActualizar.setText("Actualizar datos");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnBaja.setText("Darse de baja");
        btnBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBajaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtRol, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                                    .addComponent(txtUsuario)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(btnBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel9))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtFecha, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtCorreo, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtContra, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                                            .addComponent(txtTelefono)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                            .addComponent(txtPath)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMostrarCampos)
                                .addGap(92, 92, 92))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnMostrarCampos)
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtContra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(161, 161, 161)
                                .addComponent(btnBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnActualizar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void mostrarDatos(String usuario){
        try{
            String filePath = "C:/MEIA/Usuario.txt";
            File file = new File(filePath);
            Scanner scanner = new Scanner(file);
            if(file.exists()){
                if(file.length()== 0){
                    JOptionPane.showMessageDialog(null, "No existen usuarios");
                    
                } else{
                    String userGuardado = "";
                    while(scanner.hasNextLine()){
                    String line = scanner.nextLine();
                    String[] parts = line.split("\\|");
                    userGuardado = parts[0].trim();
                    String contraGuardada = parts[3].trim();
                    int rolGuardado = Integer.parseInt(parts[4]);
                    if(usuario.equals(userGuardado)){
                        String rolU = "";
                        if(rolGuardado==0){
                            rolU = "Usuario";
                        }else{
                            rolU = "Administrador";
                        }
                        txtUsuario.setText(usuario);
                        txtRol.setText(rolU);
                        Icon icono = new ImageIcon(getClass().getResource("6590944.png"));
                        //JOptionPane.showMessageDialog(rootPane, "Usuario: "+usuario+"  Rol: "+rolU, "Datos de Ingreso", JOptionPane.PLAIN_MESSAGE, icono);
                    }
                    
                  }
                }
            }
        }catch(IOException e){
            e.printStackTrace();
        }
                    
    }
    
    
    private void btnMostrarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarCamposActionPerformed
        
        txtContra.setEnabled(true);
        txtCorreo.setEnabled(true);
        txtFecha.setEnabled(true);
        txtTelefono.setEnabled(true);
        txtPath.setEnabled(true);
        jButton1.setEnabled(true);
        
        
    }//GEN-LAST:event_btnMostrarCamposActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser dialogo = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivo JPG", "jpg");
        File ficheroImagen;
        String rutaArchivo;
        dialogo.setFileFilter(filtro);
        int valor = dialogo.showOpenDialog(this);
        if (valor == JFileChooser.APPROVE_OPTION) {
            ficheroImagen = dialogo.getSelectedFile();
            rutaArchivo = ficheroImagen.getPath();

                
            txtPath.setText(rutaArchivo);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        String usuario = txtUsuario.getText();
        List<String> lines = new ArrayList<>();
        try{
                String filePath = "C:/MEIA/Usuario.txt";
                File file = new File(filePath);
                Scanner scanner = new Scanner(file);
                
                while (scanner.hasNextLine()) {
                lines.add(scanner.nextLine());
            }
            
        String nuevaContra = txtContra.getText();
        String nuevoCorreo = txtCorreo.getText();
        String nuevaFecha = txtFecha.getText();
        String nuevoTelefono = txtTelefono.getText();
        String nuevoPath = txtPath.getText();
        
        for(int i = 0; i < lines.size();i++){
            String[] partes = lines.get(i).split("\\|");
            if(partes[0].equals(usuario)){
                partes[3] = nuevaContra;
                partes[6] = nuevoCorreo;
                partes[5] = nuevaFecha;
                partes[7] = nuevoTelefono;
                partes[8] = nuevoPath;
                lines.set(i, String.join("|", partes));
                break;
            }  
        }
        try (PrintWriter writer = new PrintWriter(new FileWriter("C:/MEIA/Usuario.txt"))) {
            for (String line : lines) {
                writer.println(line);
            }
        }     catch (IOException e) {
            e.printStackTrace();
        }
        String nombre_simbolico = "Usuario";
        String fecha_creacion = "12/10/2023";
        String usuario_creacion = "";
        Date fechaHoraActual = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String fechaHoraFormateada = formato.format(fechaHoraActual);
        String usuario_mod = usuario;
        int contadorRegistros = 0;
        int contActivos = 0;
        int contInactivos = 0;
        String direccione = "C:/MEIA/Usuario.txt";
        File archi = new File(direccione);
        Scanner scanner3 = new Scanner(archi);
        while(scanner3.hasNextLine()) {
                contadorRegistros++;
                String line = scanner3.nextLine();
                String[] parts = line.split("\\|");
                String usuarioC = parts[0].trim();
                int rolGuardado = Integer.parseInt(parts[4].trim());
                int estatusGuard = Integer.parseInt(parts[9].trim());
                if(rolGuardado == 1){
                    usuario_creacion = usuarioC;
                }
                if(estatusGuard == 1){
                    contActivos++;
                    
                }else{
                    contInactivos++;
                }
            }
        List<String> lineas = new ArrayList<>();
        String direccion = "C:/MEIA/Usuario.txt";
        File arch = new File(direccion);
        Scanner scanner2 = new Scanner(arch);
        while (scanner2.hasNextLine()) {
            lineas.add(scanner2.nextLine());
        }
        for(int i = 0; i < lineas.size();i++){
            String[] partes = lineas.get(i).split("\\|");
            partes[0] = nombre_simbolico;
            partes[1] = fecha_creacion;
            partes[2] = usuario_creacion;
            partes[3] = fechaHoraFormateada;
            partes[4] = usuario;
            partes[5] = Integer.toString(contadorRegistros);
            partes[6] = Integer.toString(contActivos);
            partes[7] = Integer.toString(contInactivos);
            partes[8] = null;
        }
        try (PrintWriter writer = new PrintWriter(new FileWriter("C:/MEIA/desc_usuario.txt"))) {
            BufferedWriter bufferedWriter = new BufferedWriter(writer);
            bufferedWriter.write(nombre_simbolico+"|"+fecha_creacion+"|"+usuario_creacion+"|"+fechaHoraFormateada+"|"+usuario+"|"+contadorRegistros
                            +"|"+contActivos+"|"+contInactivos);
            bufferedWriter.newLine();
            bufferedWriter.close();
                            writer.close();
        }     catch (IOException e) {
            e.printStackTrace();
        }
        }
        catch(IOException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBajaActionPerformed
        String usuario = txtUsuario.getText();
        List<String> lines = new ArrayList<>();
        try{
                String filePath = "C:/MEIA/Usuario.txt";
                File file = new File(filePath);
                Scanner scanner = new Scanner(file);
                
                while (scanner.hasNextLine()) {
                lines.add(scanner.nextLine());
            }
            }
        catch(IOException e){
            e.printStackTrace();
        }
        String estatus = "0";
        for(int i = 0; i < lines.size();i++){
            String[] partes = lines.get(i).split("\\|");
            if(partes[0].equals(usuario)){
                partes[9] = estatus;
                lines.set(i, String.join("|", partes));
                break;
            }
        }
        try (PrintWriter writer = new PrintWriter(new FileWriter("C:/MEIA/Usuario.txt"))) {
            for (String line : lines) {
                writer.println(line);
            }
        }     catch (IOException e) {
            e.printStackTrace();
        }
        try{
            String file1 = "C:/MEIA/Usuario.txt";
            File arch = new File(file1);
            Scanner scanner2 = new Scanner(arch);
            String fecha_creacion = "12/10/2023";
            String nombre_simbolico = "Usuario";
            Date fechaHoraActual = new Date();
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            String fechaHoraFormateada = formato.format(fechaHoraActual);
            String usuarioModificacion = usuario;
            String usuario_creacion = "";
                        int contadorRegistros = 0;
                        int contActivos = 0;
                        int contInactivos = 0;

                        while(scanner2.hasNextLine()) {
                                contadorRegistros++;
                                String salto = scanner2.nextLine();
                                String[] parts = salto.split("\\|");
                                String usuarioC = parts[0].trim();
                                int rolGuardado = Integer.parseInt(parts[4].trim());
                                int estatusGuard = Integer.parseInt(parts[9].trim());
                                if(rolGuardado == 1){
                                    usuario_creacion = usuarioC;
                                }
                                if(estatusGuard == 1){
                                    contActivos++;

                                }else{
                                    contInactivos++;
                                }
                            }
                        try{
                            FileWriter fileWriter = new FileWriter("C:/MEIA/desc_usuario.txt",true);
                            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                            bufferedWriter.write(nombre_simbolico+"|"+fecha_creacion+"|"+usuario_creacion+"|"+fechaHoraFormateada+"|"+usuarioModificacion+"|"+contadorRegistros
                            +"|"+contActivos+"|"+contInactivos);
                            bufferedWriter.newLine();
                            bufferedWriter.close();
                            fileWriter.close();
                        }catch (IOException e){
                        e.printStackTrace();
                    }
        } catch(IOException e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_btnBajaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBaja;
    private javax.swing.JButton btnMostrarCampos;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField txtContra;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtPath;
    private javax.swing.JTextField txtRol;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
