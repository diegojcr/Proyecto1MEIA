
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Diego
 */
public class MenuAdmin extends javax.swing.JFrame {

    /**
     * Creates new form MenuAdmin
     */
    public MenuAdmin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        txtRol = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtBuscarUsuario = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        txtContraseña = new javax.swing.JLabel();
        txtNuevaContra = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtRolNuevo = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtFechaNac = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtCorreoEl = new javax.swing.JTextField();
        btnFotografia = new javax.swing.JButton();
        txtFoto = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        btnModificar = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        txtCelular = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        btnOrganizar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtRutaCarpeta = new javax.swing.JTextField();
        btnBuscarCarpeta = new javax.swing.JButton();
        btnBackup = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtUsuario.setEnabled(false);

        txtRol.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Mantenimiento de usuario administrador");

        jLabel2.setText("Usuario");

        jLabel3.setText("Rol:");

        jButton2.setText("Registrar un nuevo usuario");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Busqueda");

        jLabel11.setText("Ingrese el usuario a buscar");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel13.setText("Nombre:");

        jLabel14.setText("Apellido:");

        txtContraseña.setText("Contraseña");

        jLabel16.setText("Rol:");

        jLabel17.setText("Fecha Nacimiento");

        jLabel18.setText("Correo");

        btnFotografia.setText("Fotografia");
        btnFotografia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFotografiaActionPerformed(evt);
            }
        });

        jLabel19.setText("Estatus");

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        jLabel15.setText("Telefono");

        jButton3.setText("Dar de Baja");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnOrganizar.setText("Reorganizar archivo");
        btnOrganizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrganizarActionPerformed(evt);
            }
        });

        jLabel4.setText("Ruta Carpeta para backup");

        txtRutaCarpeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRutaCarpetaActionPerformed(evt);
            }
        });

        btnBuscarCarpeta.setText("Buscar Carpeta");
        btnBuscarCarpeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCarpetaActionPerformed(evt);
            }
        });

        btnBackup.setText("Realizar Backup");
        btnBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtRol)
                                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnOrganizar, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnBackup, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(txtRutaCarpeta))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarCarpeta)))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel10)
                        .addGap(174, 174, 174))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(43, 43, 43)
                                                    .addComponent(jLabel13))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(28, 28, 28)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(txtContraseña, javax.swing.GroupLayout.Alignment.TRAILING))))
                                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtCorreoEl, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtFechaNac)
                                        .addComponent(txtRolNuevo)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtApellido, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtNuevaContra, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel19)
                                            .addGap(27, 27, 27)
                                            .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(btnFotografia)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButton3)))
                                    .addGap(8, 8, 8))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(btnBuscar))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtContraseña)
                            .addComponent(txtNuevaContra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(txtRolNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(txtRutaCarpeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnBuscarCarpeta))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel18)
                                .addComponent(txtCorreoEl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBackup))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFotografia))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnModificar)
                            .addComponent(jButton3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(btnOrganizar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void mostrarDatos(String usuario){
        txtUsuario.setText(usuario);
        txtRol.setText("Administrador");
        try{
            String filePath = "C:/MEIA/Usuario.txt";
            File file = new File(filePath);
            Scanner scanner = new Scanner(file);
            if(file.exists()){
                if(file.length()== 0){
                    JOptionPane.showMessageDialog(null, "No existen usuarios");
                    
                } else{
                    String userGuardado = "";
                    while(scanner.hasNextLine()){
                    String line = scanner.nextLine();
                    String[] parts = line.split("\\|");
                    userGuardado = parts[0].trim();
                    String contraGuardada = parts[3].trim();
                    int rolGuardado = Integer.parseInt(parts[4]);
                    if(usuario.equals(userGuardado)){
                        String rolU = "";
                        if(rolGuardado==0){
                            rolU = "Usuario";
                        }else{
                            rolU = "Administrador";
                        }
                        
                        Icon icono = new ImageIcon(getClass().getResource("6590944.png"));
                        //JOptionPane.showMessageDialog(rootPane, "Usuario: "+usuario+"  Rol: "+rolU, "Datos de Ingreso", JOptionPane.PLAIN_MESSAGE, icono);
                    }
                    
                  }
                }
            }
        }catch(IOException e){
            e.printStackTrace();
        }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        NuevoUsuario nuevo = new NuevoUsuario();
        nuevo.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String usuarioABuscar = txtBuscarUsuario.getText();
        String filePath = "C:/MEIA/Usuario.txt";
        String dir = "C:/MEIA/Usuario.txt";
        
        
        try {
            Scanner scanner = new Scanner(new File(filePath));
            File arch = new File(dir);
            Scanner sc = new Scanner(arch);
            String pos = "";
            while(sc.hasNextLine()){
                String salto = sc.nextLine();
                String[] parts = salto.split("\\|");
                String usAlma = parts[2].trim();
                if(parts[2].equals(usuarioABuscar)){
                    pos = parts[1];
                }
            }
            String[] partesPos = pos.split("\\.");
            String parteEntera = partesPos[0];
            String fileDir = "C:/MEIA/usuario_bloque"+parteEntera+".txt";
            File archivo = new File(fileDir);
            Scanner sca = new Scanner(archivo);
            
            boolean usuarioEncontrado = false;
            String usuario = "";
            String nombre = "";
            String apellido = "";
            String password = "";
            String rol = "";
            String fecha = "";
            String correo = "";
            String telefono = "";
            String path = "";
            String estatus = "";

            while (sca.hasNextLine()) {
                String linea = sca.nextLine();
                String[] campos = linea.split("\\|");

                if (campos.length > 0 && campos[0].equals(usuarioABuscar)) {
                    usuarioEncontrado = true;
                    usuario = campos[0];
                    nombre = campos[1];
                    apellido = campos[2];
                    password = campos[3];
                    rol = campos[4];
                    fecha = campos[5];
                    correo = campos[6];
                    telefono = campos[7];
                    path = campos[8];
                    estatus = campos[9];
                    break; // Termina la búsqueda, ya que se encontró el usuario
                }
            }
            txtNombre.setText(nombre);
            txtApellido.setText(apellido);
            txtNuevaContra.setText(password);
            txtRolNuevo.setText(rol);
            txtFechaNac.setText(fecha);
            txtCorreoEl.setText(correo);
            txtCelular.setText(telefono);
            txtFoto.setText(path);
            txtStatus.setText(estatus);
            

            sca.close();

            if (!usuarioEncontrado) {
                JOptionPane.showMessageDialog(null, "Usuario no encontrado");
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnFotografiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFotografiaActionPerformed
        JFileChooser dialogo = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivo JPG", "jpg");
        File ficheroImagen;
        String rutaArchivo;
        dialogo.setFileFilter(filtro);
        int valor = dialogo.showOpenDialog(this);
        if (valor == JFileChooser.APPROVE_OPTION) {
            ficheroImagen = dialogo.getSelectedFile();
            rutaArchivo = ficheroImagen.getPath();

                
            txtFoto.setText(rutaArchivo);
        }
    }//GEN-LAST:event_btnFotografiaActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        List<String> lines = new ArrayList<>();
        List<String> datos = new ArrayList<>();
        String usuario = txtBuscarUsuario.getText();
        try{
                String filePath = "C:/MEIA/Usuario.txt";
                File file = new File(filePath);
                Scanner scanner = new Scanner(file);
                
                while (scanner.hasNextLine()) {
                lines.add(scanner.nextLine());
            }
                
        String dir = "C:/MEIA/Usuario.txt";
        File arch = new File(dir);
        Scanner sc = new Scanner(arch);
        String pos = "";
        while(sc.hasNextLine()){
            String salto = sc.nextLine();
            String[] parts = salto.split("\\|");
            String usAlma = parts[2].trim();
            if(parts[2].equals(usuario)){
                pos = parts[1];
            }
        }
        
        
        String[] partesPos = pos.split("\\.");
        String parteEntera = partesPos[0];
        String fileDir = "C:/MEIA/usuario_bloque"+parteEntera+".txt";
        File archivo = new File(fileDir);
        Scanner sca = new Scanner(archivo);
        while(sca.hasNextLine()){
            datos.add(sca.nextLine());
        }
            
        
        String nuevoNombre = txtNombre.getText();
        String nuevoApellido = txtApellido.getText();
        String nuevaContra = txtNuevaContra.getText();
        String nuevoRol = txtRolNuevo.getText();
        String nuevoCorreo = txtCorreoEl.getText();
        String nuevaFecha = txtFechaNac.getText();
        String nuevoTelefono = txtCelular.getText();
        String nuevoPath = txtFoto.getText();
        
        for(int i = 0; i < datos.size();i++){
            String[] partes = datos.get(i).split("\\|");
            if(partes[0].equals(usuario)){
                partes[1] = nuevoNombre;
                partes[2] = nuevoApellido;
                partes[3] = nuevaContra;
                partes[4] = nuevoRol;
                partes[6] = nuevoCorreo;
                partes[5] = nuevaFecha;
                partes[7] = nuevoTelefono;
                partes[8] = nuevoPath;
                datos.set(i, String.join("|", partes));
                break;
            }  
        }
        try (PrintWriter writer = new PrintWriter(new FileWriter("C:/MEIA/usuario_bloque"+parteEntera+".txt"))) {
            for (String line : datos) {
                writer.println(line);
            }
        }     catch (IOException e) {
            e.printStackTrace();
        }
        
        String nombre_simbolico = "usuario_bloque"+parteEntera;
        String fecha_creacion = "12/10/2023";
        String usuario_creacion = "";
        Date fechaHoraActual = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String fechaHoraFormateada = formato.format(fechaHoraActual);
        String usuario_mod = usuario;
        int contadorRegistros = 0;
        int contActivos = 0;
        int contInactivos = 0;
        String direccione = "C:/MEIA/usuario_bloque"+parteEntera+".txt";
        File archi = new File(direccione);
        Scanner scanner3 = new Scanner(archi);
        while(scanner3.hasNextLine()) {
                contadorRegistros++;
                String line = scanner3.nextLine();
                String[] parts = line.split("\\|");
                String usuarioC = parts[0].trim();
                int rolGuardado = Integer.parseInt(parts[4].trim());
                int estatusGuard = Integer.parseInt(parts[9].trim());
                if(rolGuardado == 1){
                    usuario_creacion = usuarioC;
                }
                if(estatusGuard == 1){
                    contActivos++;
                    
                }else{
                    contInactivos++;
                }
            }
        List<String> lineas = new ArrayList<>();
        String direccion = "C:/MEIA/usuario_bloque"+parteEntera+".txt";
        File archo = new File(direccion);
        Scanner scanner2 = new Scanner(archo);
        while (scanner2.hasNextLine()) {
            lineas.add(scanner2.nextLine());
        }
        for(int i = 0; i < lineas.size();i++){
            String[] partes = lineas.get(i).split("\\|");
            partes[0] = nombre_simbolico;
            partes[1] = fecha_creacion;
            partes[2] = usuario_creacion;
            partes[3] = fechaHoraFormateada;
            partes[4] = usuario;
            partes[5] = Integer.toString(contadorRegistros);
            partes[6] = Integer.toString(contActivos);
            partes[7] = Integer.toString(contInactivos);
            partes[8] = null;
        }
        try (PrintWriter writer = new PrintWriter(new FileWriter("C:/MEIA/desc_bloque"+parteEntera+"_usuario"+".txt"))) {
            BufferedWriter bufferedWriter = new BufferedWriter(writer);
            bufferedWriter.write(nombre_simbolico+"|"+fecha_creacion+"|"+usuario_creacion+"|"+fechaHoraFormateada+"|"+usuario+"|"+contadorRegistros
                            +"|"+contActivos+"|"+contInactivos+"|"+"3");
            bufferedWriter.newLine();
            bufferedWriter.close();
                            writer.close();
        }     catch (IOException e) {
            e.printStackTrace();
        }
        }
        catch(IOException e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_btnModificarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String usuario = txtBuscarUsuario.getText();
        List<String> lines = new ArrayList<>();
        List<String> datos = new ArrayList<>();
        try{
                String filePath = "C:/MEIA/Usuario.txt";
                File file = new File(filePath);
                Scanner scanner = new Scanner(file);
                
                while (scanner.hasNextLine()) {
                lines.add(scanner.nextLine());
            }
                String dir = "C:/MEIA/Usuario.txt";
        File arch = new File(dir);
        Scanner sc = new Scanner(arch);
        String pos = "";
        while(sc.hasNextLine()){
            String salto = sc.nextLine();
            String[] parts = salto.split("\\|");
            String usAlma = parts[2].trim();
            if(parts[2].equals(usuario)){
                pos = parts[1];
            }
        }
        
        
        String[] partesPos = pos.split("\\.");
        String parteEntera = partesPos[0];
        String fileDir = "C:/MEIA/usuario_bloque"+parteEntera+".txt";
        File archivo = new File(fileDir);
        Scanner sca = new Scanner(archivo);
        while(sca.hasNextLine()){
            datos.add(sca.nextLine());
        }
                
                
            
        String estatus = "0";
        for(int i = 0; i < lines.size();i++){
            String[] partes = lines.get(i).split("\\|");
            if(partes[2].equals(usuario)){
                partes[4] = estatus;
                lines.set(i, String.join("|", partes));
                break;
            }
        }
        try (PrintWriter writer = new PrintWriter(new FileWriter("C:/MEIA/Usuario.txt"))) {
            for (String line : lines) {
                writer.println(line);
            }
        }     catch (IOException e) {
            e.printStackTrace();
        }
        
        
        for(int i = 0; i < datos.size();i++){
            String[] partes = datos.get(i).split("\\|");
            if(partes[0].equals(usuario)){
                partes[9] = estatus;
                datos.set(i, String.join("|", partes));
                break;
            }
        }
        try (PrintWriter writer = new PrintWriter(new FileWriter("C:/MEIA/usuario_bloque"+parteEntera+".txt"))) {
            for (String line : datos) {
                writer.println(line);
            }
        }     catch (IOException e) {
            e.printStackTrace();
        }
        try{
            String file1 = "C:/MEIA/usuario_bloque"+parteEntera+".txt";
            File archo = new File(file1);
            Scanner scanner2 = new Scanner(archo);
            String fecha_creacion = "12/10/2023";
            String nombre_simbolico = "Usuario";
            Date fechaHoraActual = new Date();
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            String fechaHoraFormateada = formato.format(fechaHoraActual);
            String usuarioModificacion = usuario;
            String usuario_creacion = "";
                        int contadorRegistros = 0;
                        int contActivos = 0;
                        int contInactivos = 0;

                        while(scanner2.hasNextLine()) {
                                contadorRegistros++;
                                String salto = scanner2.nextLine();
                                String[] parts = salto.split("\\|");
                                String usuarioC = parts[0].trim();
                                int rolGuardado = Integer.parseInt(parts[4].trim());
                                int estatusGuard = Integer.parseInt(parts[9].trim());
                                if(rolGuardado == 1){
                                    usuario_creacion = usuarioC;
                                }
                                if(estatusGuard == 1){
                                    contActivos++;

                                }else{
                                    contInactivos++;
                                }
                            }
                        try{
                            FileWriter fileWriter = new FileWriter("C:/MEIA/desc_bloque"+parteEntera+"_usuario"+".txt");
                            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                            bufferedWriter.write(nombre_simbolico+"|"+fecha_creacion+"|"+usuario_creacion+"|"+fechaHoraFormateada+"|"+usuarioModificacion+"|"+contadorRegistros
                            +"|"+contActivos+"|"+contInactivos+"|"+"3");
                            bufferedWriter.newLine();
                            bufferedWriter.close();
                            fileWriter.close();
                        }catch (IOException e){
                        e.printStackTrace();
                    }
                        
                        try{
                            FileWriter fileWriter = new FileWriter("C:/MEIA/desc_usuario");
                            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                            bufferedWriter.write("Usuario"+"|"+fecha_creacion+"|"+usuario_creacion+"|"+fechaHoraFormateada+"|"+usuarioModificacion+"|"+contadorRegistros
                            +"|"+contActivos+"|"+contInactivos+"|"+"2");
                            bufferedWriter.newLine();
                            bufferedWriter.close();
                            fileWriter.close();
                        }catch (IOException e){
                        e.printStackTrace();
                    }
        } catch(IOException e){
            e.printStackTrace();
        }
        
        }
        catch(IOException e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnOrganizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrganizarActionPerformed
        String filePath = "C:/MEIA/Usuario.txt";
        try{
            BufferedReader br = new BufferedReader(new FileReader(filePath));
             List<String> lineasFiltradas = new ArrayList<>();

            String linea;
            boolean cambios = false;
            String user = "";
            while ((linea = br.readLine()) != null) {
                // Divide la línea en campos usando la coma como separador
                String[] campos = linea.split("\\|");
                boolean contieneCero = false;

                // Verificar si alguno de los campos contiene "0"
                for (String campo : campos) {
                    if (campo.trim().equals("0")) {
                        user = campos[2];
                        String pos = campos[0];
                        String[] partesPos = pos.split("\\.");
                        String parteEntera = partesPos[0];
                        String fileDir = "C:/MEIA/usuario_bloque"+parteEntera+".txt";
                        String temp = "C:/MEIA/usuario_bloque_temp.txt";
                        BufferedWriter bw = new BufferedWriter(new FileWriter(temp));
                        File archivo = new File(fileDir);
                        Scanner sca = new Scanner(archivo);
                        while(sca.hasNextLine()){
                            String salto = sca.nextLine();
                            String[] parts = salto.split("\\|");
                            if(parts[0].equals(user)){
                                bw.write(salto);
                                bw.close();
                                File archivoOriginalFile = new File(fileDir);
                                File archivoTemporalFile = new File(temp);
                                archivoTemporalFile.renameTo(archivoOriginalFile);
                            }
                        }
                        contieneCero = true;
                        break; // Salir del bucle si se encuentra un "0"
                    }
                }

                // Si la línea no contiene "0", agrégala a la lista de líneas filtradas
                if (!contieneCero) {
                    lineasFiltradas.add(linea);
                } else {
                    cambios = true; // Indicar que se realizaron cambios en el archivo
                }
            }

            // Cerrar el archivo original
            br.close();
            
            if (cambios) {
                BufferedWriter bw = new BufferedWriter(new FileWriter(filePath));
                for (String lineaFiltrada : lineasFiltradas) {
                    bw.write(lineaFiltrada + "\n");
                }
                bw.close();
                System.out.println("Líneas con valor 0 eliminadas en " + filePath);
            } else {
                System.out.println("No se realizaron cambios en " + filePath);
            }
           
                    String archivoEntrada = "C:/MEIA/Usuario.txt";
                    FileWriter escritorIndice = new FileWriter(archivoEntrada,true);
                    BufferedWriter escInd = new BufferedWriter(escritorIndice);
                    
                    List<String> usuariosList = new ArrayList<>();
                    BufferedReader brr = new BufferedReader(new FileReader(archivoEntrada));
                    String lineaT;
                    while ((lineaT = brr.readLine()) != null) {
                        String[] partes = lineaT.split("\\|");
                        String nombreUsuario = partes[2];
                        usuariosList.add(nombreUsuario);
                    }
                    brr.close();
                    
                    Collections.sort(usuariosList);
                    
                    String archivoGuardar = "C:/MEIA/guardar.txt";
                    BufferedWriter bw = new BufferedWriter(new FileWriter(archivoGuardar,true));
                    for(int i = 0; i < usuariosList.size(); i++){
                        String usuarioActual = usuariosList.get(i);
                        String siguienteUsuario = (i < usuariosList.size() - 1) ? usuariosList.get(i+1) : "nada";
                        bw.write(usuarioActual + "|" + siguienteUsuario +"\n");
                    }
                    bw.close();
                    //usuariosList.get(usuariosList.size() - 1).put("siguiente", "0");
                    
                    //Agregar los datos de guardado.txt en el archivo principal Usuarios.txt
                    List<Map<String, String>> lista = new ArrayList<>();
                    BufferedReader brPrincipal = new BufferedReader(new FileReader(archivoEntrada));
                    String lineaPrincipal;
                    while((lineaPrincipal = brPrincipal.readLine()) != null){
                        String[] partesPrincipal = lineaPrincipal.split("\\|");
                        Map<String, String> usu = new HashMap<>();
                        usu.put("registro", partesPrincipal[0]);
                        usu.put("posicion", partesPrincipal[1]);
                        usu.put("usuario", partesPrincipal[2]);
                        usu.put("siguiente", partesPrincipal[3]);
                        usu.put("estatus", partesPrincipal[4]);
                        lista.add(usu);
                    }
                    brPrincipal.close();
                    BufferedReader brDocumento = new BufferedReader(new FileReader(archivoGuardar));
                    String lineaDocumento;
                    while((lineaDocumento = brDocumento.readLine())!= null){
                        String[] partesDocumento = lineaDocumento.split("\\|");
                        String usuarioActualizar = partesDocumento[0];
                        String siguienteNuevo = partesDocumento[1];
                        
                        for(Map<String, String> usu : lista){
                            if(usu.get("usuario").equals(usuarioActualizar)){
                                usu.put("siguiente", siguienteNuevo);
                                break;
                            }
                            
                        }
                    }
                    brDocumento.close();
                    
                    BufferedWriter ba = new BufferedWriter(new FileWriter(archivoEntrada));
                    for(Map<String, String> usu: lista){
                        ba.write(usu.get("registro")+"|"+usu.get("posicion")+"|"+usu.get("usuario")+"|"+usu.get("siguiente")+"|"+usu.get("estatus"));
                        ba.newLine();
                    }
                    ba.close();
            
            
            
            
            
            
            
            
            
            
            
            
            /*
            BufferedReader reader = new BufferedReader(new FileReader("C:/MEIA/Bitacora_usuario.txt"));
                        StringBuilder data = new StringBuilder();
                        String line;
                        while ((line = reader.readLine()) != null) {
                            // Agregar la línea a los datos a transferir
                            data.append(line).append(System.lineSeparator());
                        }
                        reader.close();
                        FileWriter writer = new FileWriter("C:/MEIA/Usuario.txt",true);
                        writer.write(data.toString());
                        writer.close();
                        FileWriter borrar = new FileWriter("C:/MEIA/Bitacora_usuario.txt",false);
                        borrar.close();
                        */
        }catch(IOException e){
            e.printStackTrace();
        }
        

        

        
    }//GEN-LAST:event_btnOrganizarActionPerformed

    private void txtRutaCarpetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRutaCarpetaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRutaCarpetaActionPerformed

    private void btnBuscarCarpetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCarpetaActionPerformed
       JFileChooser dialogo = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        dialogo.setDialogTitle("Selecciona una carpeta");
        dialogo.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        int valor = dialogo.showOpenDialog(null);
        if (valor == JFileChooser.APPROVE_OPTION) {
            File carpetaSeleccionada = dialogo.getSelectedFile();
            String rutaBackup = carpetaSeleccionada.getAbsolutePath()+"/MEIA_backup";
            txtRutaCarpeta.setText(carpetaSeleccionada.getAbsolutePath());
        } else {
            JOptionPane.showMessageDialog(null, "no se selecciono ninguna carpeta");
        }
    }//GEN-LAST:event_btnBuscarCarpetaActionPerformed

    private void btnBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackupActionPerformed
        String carpetaOrigen = "C:/MEIA";
        String carpetaIntermedia = "C:/CarpetaMEIAN/MEIA_backup";
        String usuario = txtUsuario.getText();
        File carpeta = new File(carpetaIntermedia);
        String ruta1 = txtRutaCarpeta.getText();
        String rutaBackup = ruta1;
        File origen = new File(carpetaOrigen);
        File destino = new File(rutaBackup);
        String nombre_simbolico = "bitacora_backup";
        String fechaCreacion = "12/10/2023";
        Date fechaHoraActual = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String fechaHoraFormateada = formato.format(fechaHoraActual);
        try{
                    FileWriter fileWriter = new FileWriter("C:/MEIA/bitacora_backup.txt",true);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(ruta1+"|"+usuario+"|"+fechaHoraFormateada);
                    bufferedWriter.newLine();
                    bufferedWriter.close();
                    fileWriter.close();
                }catch (IOException e){
                e.printStackTrace();
            }
        try{
                    FileWriter fileWriter = new FileWriter("C:/MEIA/desc_bitacora_backup.txt",true);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(nombre_simbolico+"|"+fechaCreacion+"|"+usuario+"|"+fechaHoraFormateada+"|"+usuario);
                    bufferedWriter.newLine();
                    bufferedWriter.close();
                    fileWriter.close();
                }catch (IOException e){
                e.printStackTrace();
            }
        try{
            for (File archivo : origen.listFiles()) {
                File destinoArchivo = new File(destino, archivo.getName());
                Files.copy(archivo.toPath(), destinoArchivo.toPath(), StandardCopyOption.REPLACE_EXISTING);
            }
        }catch(IOException e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_btnBackupActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackup;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarCarpeta;
    private javax.swing.JButton btnFotografia;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnOrganizar;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtBuscarUsuario;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JLabel txtContraseña;
    private javax.swing.JTextField txtCorreoEl;
    private javax.swing.JTextField txtFechaNac;
    private javax.swing.JTextField txtFoto;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNuevaContra;
    private javax.swing.JTextField txtRol;
    private javax.swing.JTextField txtRolNuevo;
    private javax.swing.JTextField txtRutaCarpeta;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
